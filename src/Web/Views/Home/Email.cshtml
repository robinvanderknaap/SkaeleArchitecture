@model Web.ViewModels.Home.EmailViewModel

@section Title { Email }


<div class="row">
    
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <i class="icon-envelope"></i>@T.SendEmail
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("Email", "Home", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    <div class="form-group">
                        @Html.LabelFor(x => x.To, new { @class = "control-label col-md-1" })
                        <div class="input-group col-md-10">
                            <span class="input-group-addon">@@</span>
                            @Html.TextBoxFor(x => x.To, new { @class = "form-control", data_val = "true", data_val_required = T.Required, data_val_email = T.InvalidEmailAddress })
                        </div>
                        <div class="col-md-10 col-md-offset-1">@Html.ValidationMessageFor(x => x.To)</div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Cc, new { @class = "control-label col-md-1" })
                        <div class="input-group col-md-10">
                            <span class="input-group-addon">@@</span>
                            @Html.TextBoxFor(x => x.Cc, new { @class = "form-control", data_val = "true", data_val_email = T.InvalidEmailAddress })
                        </div>
                        <div class="col-md-10 col-md-offset-1">@Html.ValidationMessageFor(x => x.Cc)</div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Bcc, new { @class = "control-label col-md-1" })
                        <div class="input-group col-md-10">
                            <span class="input-group-addon">@@</span>
                            @Html.TextBoxFor(x => x.Bcc, new { @class = "form-control", data_val = "true", data_val_email = T.InvalidEmailAddress })
                        </div>
                        <div class="col-md-10 col-md-offset-1">@Html.ValidationMessageFor(x => x.Bcc)</div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Subject, new { @class = "control-label col-md-1" })
                        <div class="input-group col-md-10">
                            <span class="input-group-addon"><i class="icon-pencil"></i></span>
                            @Html.TextBoxFor(x => x.Subject, new { @class = "form-control", data_val = "true", data_val_required = T.Required })
                        </div>
                        <div class="col-md-10 col-md-offset-1">@Html.ValidationMessageFor(x => x.Subject)</div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Body, new { @class = "control-label col-md-1" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(x => x.Body, new { placeholder = "Enter your message here", rows = "10", @class = "form-control" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="col-md-11 col-md-offset-1">
                            <button type="submit" class="btn btn-primary">Send email</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $('.form-horizontal').defaultAjaxForm({
            success: function (data) {
                AddFlashMessage('', data, 'success');
                $('.form-horizontal').trigger('reset');
            },
            error: function () {
                AddFlashMessage('Error', 'An error occured while sending the email', 'error');
            }
        });
    });
</script>
