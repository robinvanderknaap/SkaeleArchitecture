@model Web.ViewModels.Login.ChangePasswordViewModel

@section Title { @T.ChangePassword }
@section MainMenu {}
@section Footer {}

<div class="row">
    <div class="col-md-4 col-md-offset-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <i class="icon-lock"></i>Skaele Architecture - @T.ChangePassword
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("ChangePassword", "Login", FormMethod.Post))
                {
                    <input type="hidden" name="UserId" value="@Model.UserId"/>
                    <input type="hidden" name="Hash" value="@Model.Hash"/>
                    <div id="messageContainer"></div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Password, (string)T.Password, new { @class = "control-label" })
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control", data_val = "true", data_val_required = T.Required })
                        @Html.FocusFor(x => x.Password)
                        @Html.ValidationMessageFor(x => x.Password)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.RepeatPassword, (string)T.RepeatPassword, new { @class = "control-label" })
                        @Html.PasswordFor(x => x.RepeatPassword, new { @class = "form-control", data_val = "true", data_val_required = T.Required, data_val_equalto = T.PasswordsDoNotMatch, data_val_equalto_other = "Password" })
                        @Html.ValidationMessageFor(x => x.RepeatPassword)
                    </div>
                    <div>
                        <button type="submit" class="btn btn-primary">@T.Send</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
